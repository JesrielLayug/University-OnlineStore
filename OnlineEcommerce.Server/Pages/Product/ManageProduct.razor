@page "/product"
@using OnlineEcommerce.Server.Models.DTOs;
@inherits ManageProductBase



@if (isLoading)
{
    <Loading />
}
else
{
    @if (Products == null || Products.Count() == 0)
    {
        <MudContainer Class="d-flex flex-column align-center pa-0 ma-0">
            <MudImage Src="/Images/Resources/no-item.png" Width="450" Height="450" ObjectFit="ObjectFit.Cover" Elevation="0" Class="rounded" />
            <MudText Typo="Typo.h4" Align="Align.Center"><strong>NO PRODUCTS</strong></MudText>
            <span class="no-items-text">You don't have any products yet. Tap the button below to add.</span>
            <MudFab Color="Color.Info" Label="Add Product" @onclick="NavigateToAddProductPage" Class="mt-6" StartIcon="@Icons.Material.Filled.Add" Size="Size.Medium" />
        </MudContainer>

    }
    else
    {
        <h3 class="heading">Manage Product</h3>
        <MudText Typo="Typo.body1" Class="mt-2 mb-8" Style="font-size: 14px; color: #8f8f8fff;">
            The most important feature in the manage product section is editing a product.
            If you want to view the details of a certain product, you can just easily select it below.
        </MudText>
        <MudPaper Outlined="true" Class="pa-5">
            <MudTable Items="@Products" Dense="true" Breakpoint="Breakpoint.MdAndDown" CustomHeader="true"
                      Filter="new Func<DTO_Product, bool>(FilterProduct1)" Elevation="0" HeaderClass="table-head-bordered">
                <HeaderContent>
                    <MudTHeadRow Class="header-centered">
                        <MudTh colspan="12">
                            <MudGrid>
                                <MudItem md="7">
                                    <MudText Typo="Typo.h6" Class="mt-3">ALL PRODUCTS</MudText>
                                </MudItem>
                                <MudItem md="5">
                                    <MudSpacer />
                                    <MudTextField @bind-Value="searchString1" Placeholder="Search" Variant="Variant.Outlined"
                                                  Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                                                  IconSize="Size.Medium" Class="mt-0 mb-5"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        </MudTh>
                    </MudTHeadRow>
                    <MudTHeadRow>
                        <MudTh>Product Name</MudTh>

                        <MudTh>Stocks</MudTh>
                        <MudTh>Price</MudTh>
                        <MudTh>SKU</MudTh>
                        <MudTh>Action</MudTh>
                    </MudTHeadRow>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Product Name" Class="d-flex justify-center align-center px-0">
                        @{
                            var productImage = context.Images
                            .FirstOrDefault();
                        }
                        <MudImage Src="@productImage.Data" Width="80" Height="80" ObjectFit="ObjectFit.Cover" Alt="@productImage.Url" Elevation="0" Class="rounded me-4" />
                        <MudContainer Class="pa-0">
                            <strong>@Text.LimitText(context.Name, 15)</strong> <br/>
                            @Text.LimitText(context.Description, 25)
                        </MudContainer>
                    </MudTd>
                    @*<MudTd DataLabel="Sizes" Class="ps-0 pe-1">
                        @if (context.Variants[0].Size.Count() != 0)
                        {
                            <MudChipSet>
                                @{
                                    var Size = context.Variants
                            .Select(variant => variant.Size)
                            .Distinct()
                            .ToList();
                                }

                                @foreach (var size in Size)
                                {
                                    <MudChip Color="Color.Info" Text="@size"></MudChip>
                                }
                            </MudChipSet>
                        }
                    </MudTd>
                    <MudTd DataLabel="Colors">
                        <MudContainer Class="pa-0 ma-0 d-flex">
                            @{
                                var ProductColors = context.Variants
                                .Select(variant => variant.Color.Value)
                                .Distinct()
                                .ToList();
                            }

                            @foreach (var color in ProductColors)
                            {
                                <div style="width: 20px; height: 20px; background-color: @color; margin-right: 7px; box-shadow: 0px 1px 7px 0px rgba(1,1,1,0.5); border-radius: 50%"></div>
                            }

                        </MudContainer>
                    </MudTd>*@
                    <MudTd DataLabel="Stocks">
                        @{
                            int stocks = 0;
                            foreach(var item in context.Variants)
                            {
                                stocks = stocks + item.Stock;
                            }
                        }
                        @stocks
                    </MudTd>
                    <MudTd DataLabel="Price">@context.BasePrice</MudTd>
                    <MudTd DataLabel="SKU">
                        @foreach (var variant in context.Variants)
                        {
                            product.SKU = variant.SKU;
                        }
                        @product.SKU
                    </MudTd>
                    <MudTd DataLabel="Action">
                        @{
                            context.SKU = product.SKU;
                        }
                        <MudIconButton @onclick="() => ShowDeleteDialog(context)" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small" Class="me-1" />
                        <MudIconButton Icon="@Icons.Material.Filled.EditNote" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudPaper>

    }
}



    



