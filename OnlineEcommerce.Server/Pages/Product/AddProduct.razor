@page "/create-product"
@using System.ComponentModel.DataAnnotations;
@using static MudBlazor.CategoryTypes;
@inherits AddProductBase
@inject ISnackbar Snackbar


<h3 class="heading">Add Product</h3>
<MudText Typo="Typo.body1" Class="my-4" Style="font-size: 14px; color: #8f8f8fff;">
    The most important feature in the product editing section is the product adding part.
    When adding products here, do not ignore to fill in all the required fields completely and follow the 
    product adding rules
</MudText>
<MudDivider Class="my-8"/>

<MudGrid Class="mt-1 mb-1" Spacing="8">
    <MudItem xs="12">
        <MudGrid>
            <MudItem xs="12" lg="4">
                <MudText Typo="Typo.subtitle2" Style="font-size: 20px;">Product Information</MudText>
                <MudText Typo="Typo.caption" Style="font-size: 14px; color: #8f8f8fff;">
                    Give your product a name and a description. <br/>
                    You may also include the materials or style in the description section.
                </MudText>
            </MudItem>
            <MudItem xs="12" lg="8">
                <MudCard Class="px-2 py-2" Outlined="true">
                    <MudCardContent Class="pa-5">
                        <EditForm Model="@product" OnValidSubmit="AddingProductProcessing">
                            <DataAnnotationsValidator />
                            <MudGrid>
                                <MudItem xs="6">
                                    <MudTextField @bind-Value="product.Name" Label="Product Name"
                                                  Variant="Variant.Outlined"></MudTextField>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudTextField @bind-Value="product.BasePrice" Label="Price"
                                                  Variant="Variant.Outlined"></MudTextField>
                                </MudItem>
                            </MudGrid>
                            <MudTextField @bind-Value="product.Description" T="string" Label="Description"
                                          Variant="Variant.Outlined" Lines="7" Class="my-6" />
                        </EditForm>
                        <MudText Typo="Typo.caption" Style="font-size: 12px; color: #8f8f8fff;">
                            Do not exceed 200 characters when entering the product description.
                        </MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudItem>

    <MudItem xs="12">
        <MudGrid>
            <MudItem xs="12" lg="4">
                <MudText Typo="Typo.subtitle2" Style="font-size: 20px;">Product Images</MudText>
                <MudText Typo="Typo.subtitle1" Style="font-size: 14px; color: #8f8f8fff;">
                    You need to add atleast 4 images. Pay Attention to the quality of the pictures you add, comply
                    with the background color standards. Pictures must be in certain dimensions.
                </MudText>
            </MudItem>
            <MudItem xs="12" lg="8">
                <MudCard Outlined="true">
                    <MudGrid Class="pa-4">
                        <MudItem xs="12" Class="d-flex">
                            <MudFileUpload T="IBrowserFile" OnFilesChanged="OnInputImageChanged">
                                <ButtonTemplate>
                                    <label class="custum-file-upload" for="@context">
                                        <div class="icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="" viewBox="0 0 24 24"><g stroke-width="0" id="SVGRepo_bgCarrier">
                                            </g><g stroke-linejoin="round" stroke-linecap="round" id="SVGRepo_tracerCarrier"></g><g id="SVGRepo_iconCarrier"> 
                                             <path fill="" d="M10 1C9.73478 1 9.48043 1.10536 9.29289 1.29289L3.29289 7.29289C3.10536 7.48043 3 7.73478 3 8V20C3 21.6569 4.34315 23 6 23H7C7.55228 23 8 22.5523 8 22C8 21.4477 7.55228 21 7 21H6C5.44772 21 5 20.5523 5 20V9H10C10.5523 9 11 8.55228 11 8V3H18C18.5523 3 19 3.44772 19 4V9C19 9.55228 19.4477 10 20 10C20.5523 10 21 9.55228 21 9V4C21 2.34315 19.6569 1 18 1H10ZM9 7H6.41421L9 4.41421V7ZM14 15.5C14 14.1193 15.1193 13 16.5 13C17.8807 13 19 14.1193 19 15.5V16V17H20C21.1046 17 22 17.8954 22 19C22 20.1046 21.1046 21 20 21H13C11.8954 21 11 20.1046 11 19C11 17.8954 11.8954 17 13 17H14V16V15.5ZM16.5 11C14.142 11 12.2076 12.8136 12.0156 15.122C10.2825 15.5606 9 17.1305 9 19C9 21.2091 10.7909 23 13 23H20C22.2091 23 24 21.2091 24 19C24 17.1305 22.7175 15.5606 20.9844 15.122C20.7924 12.8136 18.858 11 16.5 11Z" clip-rule="evenodd" fill-rule="evenodd"></path> </g></svg>
                                        </div>
                                        <div class="text">
                                            <span>Click to upload image</span>
                                        </div>
                                        <input type="file" id="file">
                                    </label>
                                </ButtonTemplate>
                            </MudFileUpload>
                            <MudContainer Class="pt-4 ms-3 d-flex" Style="overflow-x: scroll; max-height: 220px">
                                @foreach (var image in Images)
                                {
                                    <MudImage Src="@image.Data" Width="180" Height="160" ObjectFit="ObjectFit.Cover" Alt="@image.Url" Elevation="2" Class="rounded me-4" />
                                }
                            </MudContainer>
                        </MudItem>
                        @if(Images.Count != 0)
                        {
                            <MudItem xs="12">
                                <MudChipSet AllClosable="true" OnClose="RemoveChip">
                                    @foreach (var image in Images)
                                    {
                                        <MudChip Color="Color.Info" Text="@image.Url"></MudChip>
                                    }
                                </MudChipSet>
                            </MudItem>
                        }
                    </MudGrid>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudItem>

    <MudItem xs="12">
        <MudGrid>
            <MudItem xs="12" lg="4">
                <MudText Typo="Typo.subtitle2" Style="font-size: 20px;">Product Variant</MudText>
                <MudText Typo="Typo.subtitle1" Style="font-size: 14px; color: #8f8f8fff;">
                    Manage variants of the product. <br />
                    Price modifier is the amount added depending on the size and color of the product.
                </MudText>
            </MudItem>
            <MudItem xs="12" lg="8">
                <MudCard Outlined="true">
                    <MudCardContent>
                        <MudGrid Class="pa-4" Spacing="2">
                            <MudItem xs="12" md="3">
                                <MudTextField @bind-Value="variant.Size" Label="Size"
                                              Variant="Variant.Outlined"></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <MudColorPicker @bind-Value="variant.Color" Label="Color" DisableToolbar="false" Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="2">
                                <MudTextField @bind-Value="@variant.PriceModifier" Label="Price"
                                              Variant="Variant.Outlined" ></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="2">
                                <MudTextField @bind-Value="@variant.Stock" Label="Stock"
                                              Variant="Variant.Outlined" ></MudTextField>
                            </MudItem>
                            <MudItem xs="12" md="2">
                                <MudButton Variant="Variant.Outlined" Color="Color.Info" OnClick="AddVariant" Class="px-10 mt-1" Style="height: 4em;">Add</MudButton>
                            </MudItem>
                        </MudGrid>

                        @if (Variants.Count != 0)
                        {
                            
                            var Sizes = Variants
                            .Select(variant => variant.Size)
                            .Distinct()
                            .ToList();

                            @if (Variants.Any(variant => !string.IsNullOrEmpty(variant.Size)))
                            {
                                <MudText Typo="Typo.subtitle1">Sizes</MudText>
                                <MudChipSet AllClosable="true" OnClose="RemoveChip">

                                    @foreach (var size in Sizes)
                                    {
                                        @if (!string.IsNullOrEmpty(size))
                                        {
                                            <MudChip Color="Color.Info" Text="@size"></MudChip>
                                        }
                                    }
                                </MudChipSet>
                            }

                            <MudText Typo="Typo.subtitle1" Class="mt-3">Colors</MudText>
                            <MudChipSet AllClosable="true" OnClose="RemoveChip">
                                @{
                                    var ProductColor = Variants
                                        .Select(variant => variant.Color)
                                        .Distinct()
                                        .ToList();
                                }
                                @foreach (var color in ProductColor)
                                {
                                    <MudChip Color="Color.Info" Text="@color.ToString()"></MudChip>
                                }
                            </MudChipSet>

                            <MudSimpleTable Hover="true" Bordered="true" Outlined="true" Striped="true" Style="overflow-x: auto;" Class="mt-7">
                                <thead>
                                    <tr>
                                        <th>Size</th>
                                        <th>Color</th>
                                        <th>Price Modifier</th>
                                        <th>Stock</th>
                                    </tr>

                                </thead>
                                <tbody>

                                    @foreach (var v in Variants)
                                    {
                                        <tr>
                                            <td>@v.Size</td>
                                            <td>@v.Color</td>
                                            <td>@v.PriceModifier</td>
                                            <td>@v.Stock</td>
                                        </tr>
                                    }
                                </tbody>
                            </MudSimpleTable>
                        }
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudContainer Class="d-flex align-center justify-end px-0">
    <MudButton Disabled="@_processing" OnClick="AddingProductProcessing" Class="px-15 py-3 me-2" Size="Size.Large" Variant="Variant.Filled" Color="Color.Info">
        @if (_processing)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2">Processing</MudText>
        }
        else
        {
            <MudText>Add Product</MudText>
        }
    </MudButton>
</MudContainer>

